"""
Command line utility to copy outputs from
a CWL tool or sub-workflow into the calling workflow

"""
#  Copyright (c) 2021. Harvard University
#
#  Developed by Research Software Engineering,
#  Faculty of Arts and Sciences, Research Computing (FAS RC)
#  Author: Michael A Bouzinier
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

import os
import sys
import yaml


def encode(name: str):
    if len(name) < 13:
        return name + '_'
    else:
        return name[:9] + str(hash(name) % 1000) + '_'


def collect(name: str, path: str):
    with open(path) as f:
        cwl = yaml.safe_load(f)
        outputs = cwl["outputs"]
        print("    out:")
        for o in outputs:
            t = outputs[o]["type"]
            print("      - {}".format(o))
        print("## Generated by nsaph/util/cwl_collect_outputs.py from {}:".
              format(os.path.basename(path)))
        for o in outputs:
            t = outputs[o]["type"]
            print("  {}:".format(encode(name) + o))
            print("    type: {}".format(t))
            print("    outputSource: {}/{}".format(name, o))


if __name__ == '__main__':
    collect(sys.argv[1], sys.argv[2])
            