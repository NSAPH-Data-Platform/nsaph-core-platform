medicaid:
  reference: "https://gitlab-int.rc.fas.harvard.edu/rse/francesca_dominici/dominici_data_pipelines/-/blob/master/medicaid/reports/schema.yml"
  index: "unless excluded"
  schema: "medicaid"
  schema.audit: "medicaid_audit"
  tables:
    beneficiaries:
      create:
        type: materialized view
        from: cms.ps
        group by:
          - bene_id
      columns:
        - bene_id
        - dob:
            source: "MIN(el_dob)"
            identifier: true
        - dod:
            source: "MAX(el_dod)"
            identifier: true
        - race_ethnicity_code:
            description: "https://resdac.org/cms-data/variables/raceethnicity-msis"
            source: "string_agg(distinct el_race_ethncy_cd, ',')"
            identifier: true
        - sex:
            source: "string_agg(distinct el_sex_cd, ',')"
            identifier: true
        - duplicates:
            source: "COUNT(distinct {identifiers})"
            description: "number of duplicate records for the beneficiary"
        - dob_latest:
            source: |
              CASE
                WHEN MAX(el_dob) <> MIN(el_dob) THEN  MAX(el_dob)
              END
        - dod_earliest:
            source: |
              CASE
                WHEN MIN(el_dod) <> MAX(el_dod) THEN MIN(el_dod)
              END
      children:
        monthly:
          create:
            type: materialized view
            from: cms.ps
          columns:
            - bene_id
            - msis_id
            - year:
                source: max_yr_dt
            - state:
                source: state_cd
            - month:
                source: "unnest(ARRAY[1,2,3,4,5,6,7,8,9,10,11,12])"
            - max_elg_cd:
                source: |
                  unnest(ARRAY[
                    max_elg_cd_mo_1,
                    max_elg_cd_mo_2,
                    max_elg_cd_mo_3,
                    max_elg_cd_mo_4,
                    max_elg_cd_mo_5,
                    max_elg_cd_mo_6,
                    max_elg_cd_mo_7,
                    max_elg_cd_mo_8,
                    max_elg_cd_mo_9,
                    max_elg_cd_mo_10,
                    max_elg_cd_mo_11,
                    max_elg_cd_mo_12
                  ])
            - el_mdcr_ben:
                source: |
                  unnest(ARRAY[
                    el_mdcr_ben_mo_1,
                    el_mdcr_ben_mo_2,
                    el_mdcr_ben_mo_3,
                    el_mdcr_ben_mo_4,
                    el_mdcr_ben_mo_5,
                    el_mdcr_ben_mo_6,
                    el_mdcr_ben_mo_7,
                    el_mdcr_ben_mo_8,
                    el_mdcr_ben_mo_9,
                    el_mdcr_ben_mo_10,
                    el_mdcr_ben_mo_11,
                    el_mdcr_ben_mo_12
                  ])
            - el_mdcr_dual:
                source: |
                  unnest(ARRAY[
                    el_mdcr_dual_mo_1,
                    el_mdcr_dual_mo_2,
                    el_mdcr_dual_mo_3,
                    el_mdcr_dual_mo_4,
                    el_mdcr_dual_mo_5,
                    el_mdcr_dual_mo_6,
                    el_mdcr_dual_mo_7,
                    el_mdcr_dual_mo_8,
                    el_mdcr_dual_mo_9,
                    el_mdcr_dual_mo_10,
                    el_mdcr_dual_mo_11,
                    el_mdcr_dual_mo_12
                  ])
            - mc_combo:
                source: |
                  unnest(ARRAY[
                    mc_combo_mo_1,
                    mc_combo_mo_2,
                    mc_combo_mo_3,
                    mc_combo_mo_4,
                    mc_combo_mo_5,
                    mc_combo_mo_6,
                    mc_combo_mo_7,
                    mc_combo_mo_8,
                    mc_combo_mo_9,
                    mc_combo_mo_10,
                    mc_combo_mo_11,
                    mc_combo_mo_12
                  ])
            - el_rstrct_bnft_flg:
                source: |
                  unnest(ARRAY[
                    el_rstrct_bnft_flg_1,
                    el_rstrct_bnft_flg_2,
                    el_rstrct_bnft_flg_3,
                    el_rstrct_bnft_flg_4,
                    el_rstrct_bnft_flg_5,
                    el_rstrct_bnft_flg_6,
                    el_rstrct_bnft_flg_7,
                    el_rstrct_bnft_flg_8,
                    el_rstrct_bnft_flg_9,
                    el_rstrct_bnft_flg_10,
                    el_rstrct_bnft_flg_11,
                    el_rstrct_bnft_flg_12
                  ])
        enrollments:
          create:
            #type: materialized view
            type: view
            from: cms.ps
            group by:
              - bene_id
              - max_yr_dt
              - state_cd
          columns:
            - year:
                source: max_yr_dt
            - state:
                source: state_cd
            - state_iso:
                source: "('US-' || state_cd) "
            - residence_county:
                source: "MAX(el_rsdnc_cnty_cd_ltst)"
            - residence_counties:
                source: "string_agg(distinct el_rsdnc_cnty_cd_ltst, ',')"
            - fips5:
                source: "(SELECT fips2 FROM public.us_states as s WHERE s.state_id = ps.state_cd) || MAX(el_rsdnc_cnty_cd_ltst)"
            - zip:
                source: "MAX(el_rsdnc_zip_cd_ltst)"
            - zips:
                source: "string_agg(distinct el_rsdnc_zip_cd_ltst, ',')"
            - months_eligible:
                source:
                  select: "COUNT(distinct month)"
                  from: monthly
                  where: "max_elg_cd != '00'"
            - months_dual_eligible:
                source:
                  select: "COUNT(distinct month)"
                  from: monthly
                  where: "max_elg_cd != '00' AND el_mdcr_ben > 0"
            - state_count:
                source: |
                  (
                    SELECT COUNT(distinct state_cd)
                    FROM cms.ps AS ps2
                    WHERE
                      cms.ps.bene_id = ps2.bene_id
                      AND cms.ps.max_yr_dt = ps2.max_yr_dt
                  )
            - died:
                source: |
                  CASE EXTRACT (YEAR from MAX(el_dod))
                    WHEN max_yr_dt THEN TRUE
                    ELSE FALSE
                  END
        eligibility:
          create:
            #type: materialized view
            type: view
            from: medicaid.monthly
            group by:
              - bene_id
              - year
              - state
              - month
          columns:
            - year
            - state
            - month
            - eligibility_code:
                description: "https://resdac.org/cms-data/variables/medicare-medicaid-dual-eligibility-code-january"
                source: MAX(max_elg_cd)
            - managed_care_code:
                description: "https://resdac.org/cms-data/variables/managed-care-combinations-jan"
                source: MAX(mc_combo)
            - medicare_eligibility:
                source: MAX(el_mdcr_ben)
            - restrictions:
                description: "https://resdac.org/cms-data/variables/restricted-benefits-jan"
                source: MAX(el_rstrct_bnft_flg)
          children:
            admissions:
              invalid.records:
                action: "INSERT"
                #action: "IGNORE"
                target:
                  schema: $schema.audit
              description: "https://resdac.org/cms-data/files/max-ip/data-documentation"
              columns:
                - year:
                    type: "INT"
                    source:
                      type: "generated"
                      code: "GENERATED ALWAYS AS (EXTRACT (YEAR FROM admission_date)) STORED"
                - month:
                    type: "INT"
                    source:
                      type: "generated"
                      code: "GENERATED ALWAYS AS (EXTRACT (MONTH FROM admission_date)) STORED"
                - admission_date:
                    type: "DATE"
                    source:
                      type: "compute"
                      columns: # parameters refer to column names in the table, while columns refer to column names in the source
                        - "ADMSN_DT"
                      code: "datetime.strptime({1}, '%Y%m%d').date()"
                - discharge_date:
                    type: "DATE"
                    source:
                      type: "compute"
                      columns: # parameters refer to column names in the table, while columns refer to column names in the source
                        - "SRVC_END_DT"
                      code: "datetime.strptime({1}, '%Y%m%d').date()"
                - diagnosis:
                    type: "VARCHAR(12)[10]"
                    source: "DIAG_CD_*"
              primary_key:
                - bene_id
                - admission_date
                - discharge_date


